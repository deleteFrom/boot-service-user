<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://code.alibabatech.com/schema/dubbo  
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        ">
        <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application-test.properties" />
    </bean>
 
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}" />
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}" />
        <property name="password" value="${spring.datasource.password}" />
        <property name="initialSize" value="${spring.datasource.initial-size}"/><!-- 初始化连接大小 -->
        <property name="maxActive" value="${spring.datasource.max-active}"/><!-- 连接池最大数量 -->
        <property name="maxIdle" value="${spring.datasource.max-idle}"/><!-- 连接池最大空闲 -->
        <property name="minIdle" value="${spring.datasource.min-idle}"/><!-- 连接池最小空闲 -->
        <property name="maxWait" value="${spring.datasource.max-wait}"/><!-- 获取连接最大等待时间 -->
    </bean>
        
        
         <!-- spring和MyBatis整合-->
    	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapper.xml文件-->
        <property name="mapperLocations" value="classpath:com/boot/mapper/*.xml"/>
    	</bean>
        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
	        <property name="basePackage" value="com.boot.mapper.*" />
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	    </bean>
	 
	    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	   <bean id="transactionManager"
	        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	        <property name="dataSource" ref="dataSource" />
	    </bean>
        
        
      <bean id="bootUserService" class="com.boot.service.user.BootUserServiceImpl" />   
   <!-- 提供方应用名称信息，这个相当于起一个名字，我们dubbo管理页面比较清晰是哪个应用暴露出来的 -->
   <dubbo:application name="dubbo_provider"></dubbo:application>
   <!-- 使用zookeeper注册中心暴露服务地址 -->  
   <dubbo:registry address="zookeeper://127.0.0.1:2181" />
    <dubbo:protocol name="dubbo" port="20880" />
  <!-- 要暴露的服务接口 -->  
	<dubbo:annotation package="com.boot" />
	<dubbo:provider  timeout="10000" group="bootUserService"/>
</beans>
  
  